<% 
  var device_variable =  (device.variable !== undefined && device.variable !== 'undefined' ? JSON.stringify(device.variable) : '[]' ); 
%>
<div class="row"> 
  <div class="col-md-12 panel panel-default">

    <!-- TODO add logic for multiple devices -->
      <form class="form-horizontal" action="/device/<%= action %>"  method="post">
        <div class="panel-body">
          <h2 class="panel-title"> Edit </h2>
          <br><hr>
          <!-- fix area chart for now -->
          <input type="hidden" name="graph" value="area" />
          <input type="hidden" name="_id" value="<%= device.id %>" />
          
          <div class="form-group">
            <label class="col-md-3 col-xs-12 control-label"> Name</label>
            <div class="col-md-6 col-xs-12">
              <div class="input-group">
                <input type="text" name="name" id="name" class="form-control" value="<%= device.name %>" />
              </div>
            </div>
          </div>

          <div class="form-group">
            <label class="col-md-3 col-xs-12 control-label">Description</label>
            <div class="col-md-6 col-xs-12">
              <div class="input-group">
                <textarea name="desc" class="form-control" id="desc"><%= device.desc %></textarea>
              </div>
            </div>
          </div>


          <div class="form-group">
            <label class="col-md-3 col-xs-12 control-label">Device Variables</label>
            <div class="col-md-6 col-xs-12">
              <!-- TODO finish color saving -->
              <div class='input-group'>
                <input type='hidden' name='variable' id='variable' value="<%= device_variable %>">
                <a class="btn btn-primary" id="add-data-btn"> Add variable </a>
                
                <table class="table">
                  <th> Name </th>
                  <th> Color </th>
                  <th> </th>
                  <tbody id="device-data">
                  <% if( typeof device.variable !== 'undefined' && device.variable.length > 0 ) {%>
                    <% device.variable.forEach(function(d, i) { %>
                    <tr data-order='<%= i %>'>
                        <td><input type="text" class="form-control variable-input" value="<%= d.name %>" data-type="variable_name" /> </td>
                        <td>
                          <select class="variable-input colorpicker" data-type="color" >
                            <option value="#CD5C5C" data-color="#CD5C5C">indianred</option>
                            <option value="#FF4500" data-color="#FF4500">orangered</option>
                            <option value="#008B8B" data-color="#008B8B">darkcyan</option>
                            <option value="#B8860B" data-color="#B8860B">darkgoldenrod</option>
                            <option value="#32CD32" data-color="#32CD32">limegreen</option>
                            <option value="#FFD700" data-color="#FFD700">gold</option>
                            <option value="#48D1CC" data-color="#48D1CC">mediumturquoise</option>
                            <option value="#87CEEB" data-color="#87CEEB">skyblue</option>
                            <option value="#FF69B4" data-color="#FF69B4">hotpink</option>
                            <option value="#87CEFA" data-color="#87CEFA">lightskyblue</option>
                            <option value="#6495ED" data-color="#6495ED">cornflowerblue</option>
                            <option value="#DC143C" data-color="#DC143C">crimson</option>
                            <option value="#FF8C00" data-color="#FF8C00">darkorange</option>
                            <option value="#C71585" data-color="#C71585">mediumvioletred</option>
                            <option value="#000000" data-color="#000000">black</optio +
                          </select>
                        </td>
                        <td><a href="#" class="device-data-remove"> Delete </a></td>
                      </tr>
                    <% }) %>
                  <% } %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div class="form-group">
            <label class="col-md-3 col-xs-12 control-label">Privacy</label>
            <div class="col-md-6 col-xs-12">
              <div class="input-group">
                <label class="check">
                  <input type="checkbox" class="icheckbox"  name='privacy' <%= ( device.privacy ? 'checked="checked"' : '' ) %> />
                </label>
              </div>
            </div>
          </div>

          <div class="form-group">
            <label class="col-md-3 col-xs-12 control-label">Location</label>
            <div class="col-md-6 col-xs-12">
              <div class="input-group">
                <input id="search-box" name="location" class="form-control controls" type="text" placeholder="Search Box" value="<%= device.location %>">
                <input type="hidden" name="gmap" id="gmap" class="form-control" value="<%= device.gmap %>" />
                <br>
                <br>
                <div id="map" style="height: 400px; width: 600px;"></div>
              </div>
            </div>
              <script type="text/javascript">
              // google map
              var map;
              function initMap() {
                var bounds = new google.maps.LatLngBounds();
                <%
                  var latitude  = null;
                  var longitude = null;
                  if (typeof  device.lat !== 'undefined') {
                    latitude  = device.lat();
                  }
                  if ( typeof device.lng !== 'undefined') {
                    longitude = device.lng();
                  }

                %>
                var lat = "<%= latitude %>" || "14.599512";
                var lng = "<%= longitude %>" || "120.98422";
                var default_location = new google.maps.LatLng( parseFloat(lat), parseFloat(lng));

                var map = new google.maps.Map(document.getElementById('map'), {
                  center: {lat: parseFloat(lat), lng: parseFloat(lng)},
                  zoom: 12,
                  mapTypeId: google.maps.MapTypeId.ROADMAP
                });

                // set default location
                // bounds.extend(default_location);
                // map.fitBounds(bounds);

                // Create the search box and link it to the UI element.
                var searchInput = document.getElementById('search-box');
                var searchBox = new google.maps.places.SearchBox(searchInput);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(searchInput);

                // Bias the SearchBox results towards current map's viewport.
                map.addListener('bounds_changed', function() {
                  searchBox.setBounds(map.getBounds());
                });

                var markers = [];
                // [START region_getplaces]
                // Listen for the event fired when the user selects a prediction and retrieve
                // more details for that place.
                searchBox.addListener('places_changed', function() {
                  var places = searchBox.getPlaces();

                  if (places.length == 0) {
                    return;
                  }

                  // Clear out the old markers.
                  markers.forEach(function(marker) {
                    marker.setMap(null);
                  });
                  markers = [];

                  // For each place, get the icon, name and location.
                  places.forEach(function(place) {
                    var location = place.geometry.location;
                    
                    // set gmap value
                    $('#gmap').val(location.lat() + ',' + location.lng());
                    console.log(place.icon);  
                    var icon = {
                      url: place.icon,
                      size: new google.maps.Size(71, 71),
                      origin: new google.maps.Point(0, 0),
                      anchor: new google.maps.Point(17, 34),
                      scaledSize: new google.maps.Size(25, 25)
                    };

                    // Create a marker for each place.
                    markers.push(new google.maps.Marker({
                      map: map,
                      icon: icon,
                      title: place.name,
                      position: place.geometry.location
                    }));

                    if (place.geometry.viewport) {
                      // Only geocodes have viewport.
                      bounds.union(place.geometry.viewport);
                    } else {
                      bounds.extend(place.geometry.location);
                    }
                  });
                  map.fitBounds(bounds);
                });
                // [END region_getplaces]
              }
              </script> 
              <script async defer type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBxhEVx2ucXJx6ldybmwbbFGsN2e2TeR9Q&callback=initMap&libraries=places"></script>
          </div>

          <div class="form-group">
            <label class="col-md-3 col-xs-12 control-label">Device cluster</label>
            <div class="col-md-6 col-xs-12">
              <div class="input-group">
                <label class="check">
                  <input type="checkbox" class="icheckbox"  id="device-cluster" name='cluster' <%= ( device.cluster ? 'checked="checked"' : '' ) %> />
                </label>

              </div>
              <div class='input-group' id="child-devices">
                <input type="text" class="form-control" id='child-device-input' /> 
                <a class="btn btn-primary" id="child-device-btn"> Add child device </a>
                <ul class="devices">
                  <% if( typeof device.child_devices !== 'undefined' && device.child_devices.length > 0 ) {%>
                    <% device.child_devices.forEach(function(child) { %>
                      <li>
                        <p> <%= child.name %> </p>
                        <input type="hidden" name="child_devices" value="<%= child.name%>" />
                        <input type="hidden" name="child_ids" value="<%= child._id%>" />
                        <a href="#" class="child-device-remove"> Delete </a>
                      </li>
                    <% }) %>
                  <% } %>
                </ul>
              </div>
            </div>
          </div>

          <button type='submit' class="btn btn-primary"> <%= action %> </button>
        </div>
     </form>
  </div>
</div>
